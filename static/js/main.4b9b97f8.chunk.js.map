{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Container/Container.module.css","components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","Section","children","title","className","s","Statistics","good","neutral","bad","total","positivePercentage","description","FeedbackOptions","options","onLeaveFeedback","section","map","option","idx","btn","type","name","onClick","Notification","message","Container","container","App","useState","state","setState","countTotalFeedback","totalPositiv","Math","round","positivTotal","keys","Object","e","target","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,YAAc,kC,mBCAhCD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,IAAM,+B,iBCAnED,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,YAAc,oC,gBCAhCD,EAAOC,QAAU,CAAC,UAAY,+B,qKCWfC,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAb,OACd,gCACE,oBAAIC,UAAWC,IAAEF,MAAjB,SAAyBA,IACxBD,MCSUI,EAXI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,cAAC,EAAD,CAASR,MAAM,aAAf,SACE,gCACE,oBAAGC,UAAWC,IAAEO,YAAhB,mBAAoCL,KACpC,oBAAGH,UAAWC,IAAEO,YAAhB,sBAAuCJ,KACvC,oBAAGJ,UAAWC,IAAEO,YAAhB,kBAAmCH,KACnC,oBAAGL,UAAWC,IAAEO,YAAhB,oBAAqCF,KACrC,oBAAGN,UAAWC,IAAEO,YAAhB,gCAAiDD,EAAjD,a,gBCYSE,EAlBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,cAAC,EAAD,CAASZ,MAAM,wBAAf,SACE,qBAAKC,UAAWC,IAAEW,QAAlB,SACGF,EAAQG,KAAI,SAACC,EAAQC,GAAT,OACX,wBACEf,UAAWC,IAAEe,IAEbC,KAAK,SACLC,KAAMJ,EACNK,QAASR,EALX,SAOGG,GALIC,W,gBCJAK,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGrB,UAAWC,IAAEO,YAAhB,SAA8Ba,K,iBCCjBC,EAJG,SAAC,GAAD,IAAGxB,EAAH,EAAGA,SAAH,OAChB,qBAAKE,UAAWC,IAAEsB,UAAlB,SAA8BzB,KCuEjB0B,EApEH,WAuBV,IAMA,EAA0BC,mBANH,CACrBtB,KAAM,EACNC,QAAS,EACTC,IAAK,IAGP,mBAAOqB,EAAP,KAAcC,EAAd,KAMQxB,EAAuBuB,EAAvBvB,KAAMC,EAAiBsB,EAAjBtB,QAASC,EAAQqB,EAARrB,IAEjBuB,EAAqB,WACzB,OAAOzB,EAAOC,EAAUC,GAGpBwB,EAAe,WACnB,OAAOC,KAAKC,MAAO5B,EAAOyB,IAAwB,MAG9CtB,EAAQsB,IACRI,EAAeH,IAAiBA,IAAiB,EACjDI,EAAOC,OAAOD,KAAKP,GAGzB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAiBhB,QAASuB,EAAMtB,gBArBZ,SAAAwB,GACtB,IAAQjB,EAASiB,EAAEC,OAAXlB,KACRS,GAAS,SAAAU,GAAS,kCAAUA,GAAV,kBAAsBnB,EAAOmB,EAAUnB,GAAQ,UAoB9DZ,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoByB,IAGtB,cAAC,EAAD,CAAcX,QAAQ,0BChE9BiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4b9b97f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Statistics_description__bL9B6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"FeedbackOptions_section__3XKU-\",\"btn\":\"FeedbackOptions_btn__38ZQV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2357v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Notification_description__2CNMs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2pZ53\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Section.module.css';\n\nconst Section = ({ children, title }) => (\n  <div>\n    <h2 className={s.title}>{title}</h2>\n    {children}\n  </div>\n);\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Statistics.module.css';\nimport Section from 'components/Section';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <Section title=\"Statistics\">\n    <div>\n      <p className={s.description}>Good: {good}</p>\n      <p className={s.description}>Neutral: {neutral}</p>\n      <p className={s.description}>Bad: {bad}</p>\n      <p className={s.description}>Total: {total}</p>\n      <p className={s.description}>Positive feedback: {positivePercentage}%</p>\n    </div>\n  </Section>\n);\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './FeedbackOptions.module.css';\n\nimport Section from 'components/Section';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <Section title=\"Please leave feedback\">\n    <div className={s.section}>\n      {options.map((option, idx) => (\n        <button\n          className={s.btn}\n          key={idx}\n          type=\"button\"\n          name={option}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  </Section>\n);\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array,\n  onLeaveFeedback: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n  <p className={s.description}>{message}</p>\n);\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import React from 'react';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nexport default Container;\n","import React, { useState } from 'react';\n\nimport Statistics from 'components/Statistics';\nimport FeedbackOptions from 'components/FeedbackOptions';\nimport Notification from 'components/Notification';\nimport Container from 'components/Container';\n\nconst App = () => {\n  //------------------method--swithc-----------------------------------------------------------------\n  //   const [good, setStateGood] = useState(0)\n  //   const [neutral, setStateNeutral] = useState(0)\n  //   const [bad, setStateBad] = useState(0)\n\n  //   const handleIncrement = ({ target: { name } }) => {\n  //     switch (name) {\n  //       case 'good':\n  //         setStateGood(prev => prev + 1 );\n  //         break;\n  //       case 'neutral':\n  //         setStateNeutral(prev => prev + 1 );\n  //         break;\n  //       case 'bad':\n  //         setStateBad(prev => prev + 1 );\n  //         break;\n  //       default:\n  //         return;\n  //     }\n  //   }\n  // const objFeedback = {good, neutral, bad}\n  //------------------------------method--object--state------------------------------------\n  const initionalState = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  const [state, setState] = useState(initionalState);\n\n  const handleIncrement = e => {\n    const { name } = e.target;\n    setState(prevState => ({ ...prevState, [name]: prevState[name] + 1 }));\n  };\n  const { good, neutral, bad } = state;\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const totalPositiv = () => {\n    return Math.round((good / countTotalFeedback()) * 100);\n  };\n\n  const total = countTotalFeedback();\n  const positivTotal = totalPositiv() ? totalPositiv() : 0;\n  const keys = Object.keys(state);\n  // const keys = Object.keys(objFeedback);\n\n  return (\n    <Container>\n      <FeedbackOptions options={keys} onLeaveFeedback={handleIncrement} />\n      {total ? (\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={positivTotal}\n        />\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}